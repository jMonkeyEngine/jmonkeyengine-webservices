user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;

events {
    worker_connections 65535;
    multi_accept on;
    use epoll;
}

http {
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    server_tokens off;
    log_not_found off;

    types_hash_max_size 2048;
    client_max_body_size 50M;
    client_header_timeout 5m;
    client_body_timeout 5m;

    send_timeout 5m;
    output_buffers 16 32k;
    postpone_output 1460;
    connection_pool_size 416;
    client_header_buffer_size 8k;
    large_client_header_buffers 8 8k;
    request_pool_size 64k;
    keepalive_requests 180;
    keepalive_timeout 75s;
    ignore_invalid_headers on;

    limit_req_zone $binary_remote_addr zone=ReqLimit:10m rate=30r/s;

    # MIME
    include mime.types;
    default_type application/octet-stream;

    # logging
    log_format main '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    server_names_hash_max_size 64;
    server_names_hash_bucket_size 64;

    # gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    # limits
    limit_req_log_level warn;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;           
        server_name _;

        location /health {
            return 200 "UP\n";
        }

        # CertBot http://certbot.docker:80
        location '/.well-known/acme-challenge' {
            resolver 127.0.0.11 ipv6=off;
            error_page 502 =444 @interrupt_connection;
            default_type "text/plain";
            set $upstream certbot.docker;
            proxy_pass http://$upstream:80;
        }

        # Redirect all http
        location / {
            return 301 https://$host$request_uri;
        }
    }


    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name "%%HUB_HOSTNAME%%" "hub2.jmonkeyengine.org";
        include "/etc/nginx/server.conf";

        location '/%%LOADER_IO_VERIFICATION_TOKEN%%.txt' {
            default_type "text/plain";
            return 200 "%%LOADER_IO_VERIFICATION_TOKEN%%";
        }

        location @historicarchive {
            proxy_http_version 1.1;
            proxy_ssl_verify off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass %%JME_HISTORIC_ARCHIVE%%;
        }


     # CertBot http://certbot.docker:80
        location '/.well-known/acme-challenge' {
            resolver 127.0.0.11 ipv6=off;
            error_page 502 =444 @interrupt_connection;
            default_type "text/plain";
            set $upstream certbot.docker;
            proxy_pass http://$upstream:80;
        }

        location /uploads/default {
            proxy_pass http://unix:/var/run/hub.sock:;
            proxy_set_header Host $http_host;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_intercept_errors on;
            error_page 404 = @historicarchive;
        }

        location / {
            proxy_pass http://unix:/var/run/hub.sock:;
            proxy_set_header Host $http_host;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Real-IP $remote_addr;
        }

    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name "%%STORE_HOSTNAME%%";
        include "/etc/nginx/server.conf";

        set $p_scheme "http";
        set $p_name "store";
        set $p_port "8080";
        set $p_tld "docker";
        include "/etc/nginx/reverse_proxy.conf";
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name "%%OBJECT_STORAGE_HOSTNAME%%";
        include "/etc/nginx/server.conf";

        set $p_scheme "http";
        set $p_name "minio";
        set $p_port "9000";
        set $p_tld "docker";
       
        resolver 127.0.0.11 ipv6=off;
        uninitialized_variable_warn off;

     # CertBot http://certbot.docker:80
        location '/.well-known/acme-challenge' {
            resolver 127.0.0.11 ipv6=off;
            error_page 502 =444 @interrupt_connection;
            default_type "text/plain";
            set $upstream certbot.docker;
            proxy_pass http://$upstream:80;
        }
        location / {
            proxy_http_version 1.1;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;


            proxy_request_buffering off;
            proxy_buffering off;
            proxy_buffers 16 16k;
            proxy_buffer_size 16k;

            chunked_transfer_encoding on;

            proxy_intercept_errors on;


            access_log off;
            log_not_found off;

            proxy_read_timeout 5m;
            proxy_connect_timeout 60s;
            proxy_send_timeout 5m;
            proxy_socket_keepalive on;
            proxy_pass $p_scheme://$p_name.$p_tld:$p_port;

            # Workaround MINIO console redirect issue
            proxy_redirect    http://%%OBJECT_STORAGE_HOSTNAME%%:9001    https://%%OBJECT_STORAGE_CONSOLE_HOSTNAME%%/;
        

        }
    }

     server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name "%%OBJECT_STORAGE_CONSOLE_HOSTNAME%%";
        include "/etc/nginx/server.conf";

        set $p_scheme "http";
        set $p_name "minio";
        set $p_port "9001";
        set $p_tld "docker";
        include "/etc/nginx/reverse_proxy.conf";
    }



    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name "%%ARTIFACTS_HOSTNAME%%";
        include "/etc/nginx/server.conf";

        set $p_scheme "http";
        set $p_name "minio";
        set $p_port "9000";
        set $p_tld "docker";
        set $p_resource "artifacts";

        resolver 127.0.0.11 ipv6=off;
        uninitialized_variable_warn off;

     # CertBot http://certbot.docker:80
        location '/.well-known/acme-challenge' {
            resolver 127.0.0.11 ipv6=off;
            error_page 502 =444 @interrupt_connection;
            default_type "text/plain";
            set $upstream certbot.docker;
            proxy_pass http://$upstream:80;
        }
        location ~/(.*)$ {
            proxy_http_version 1.1;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;

            proxy_redirect off;

            proxy_request_buffering off;
            proxy_buffering off;
            proxy_buffers 16 16k;
            proxy_buffer_size 16k;

            chunked_transfer_encoding on;

            proxy_intercept_errors on;


            access_log off;
            log_not_found off;

            proxy_read_timeout 5m;
            proxy_connect_timeout 60s;
            proxy_send_timeout 5m;
            proxy_socket_keepalive on;
            proxy_pass $p_scheme://$p_name.$p_tld:$p_port/$p_resource/$1;

        }

    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name "%%PMA_HOSTNAME%%";
        include "/etc/nginx/server.conf";

        auth_basic "Password protected";
        auth_basic_user_file /etc/nginx/.pma;

        set $p_scheme "http";
        set $p_name "phpmyadmin";
        set $p_port "80";
        set $p_tld "docker";
        include "/etc/nginx/reverse_proxy.conf";
    }



    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name "%%KEEWEB_HOSTNAME%%";
        include "/etc/nginx/server.conf";

        auth_basic "Password protected";
        auth_basic_user_file /etc/nginx/.keeweb;

        set $p_scheme "https";
        set $p_name "keeweb";
        set $p_port "443";
        set $p_tld "docker";
        include "/etc/nginx/reverse_proxy.conf";

    

    }


    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name "%%KEEWEB_WEB_DAV_HOSTNAME%%";
        include "/etc/nginx/server.conf";

        resolver 127.0.0.11 ipv6=off;
        uninitialized_variable_warn off;

        auth_basic "Password protected";
        auth_basic_user_file /etc/nginx/.keeweb;
        root /keeweb;
     # CertBot http://certbot.docker:80
        location '/.well-known/acme-challenge' {
            resolver 127.0.0.11 ipv6=off;
            error_page 502 =444 @interrupt_connection;
            default_type "text/plain";
            set $upstream certbot.docker;
            proxy_pass http://$upstream:80;
        }
        location / {
            include "/etc/nginx/cors.conf";        
            client_body_temp_path /tmp/keeweb-webdav-client_temp;
            dav_methods PUT DELETE MKCOL COPY MOVE;
            create_full_put_path  on;
            dav_access  all:rw;
        }

    }
}
